$date
	Sun Apr 11 13:54:41 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module testbench $end
$var wire 8 ! opcode_tmp [7:0] $end
$var wire 8 " zcv_correct [7:0] $end
$var wire 1 # zero_out $end
$var wire 3 $ zcv_out [2:0] $end
$var wire 32 % result_out [31:0] $end
$var wire 32 & result_correct [31:0] $end
$var wire 1 ' overflow_out $end
$var wire 1 ( cout_out $end
$var reg 1 ) clk $end
$var reg 6 * error_count [5:0] $end
$var reg 6 + error_count_tmp [5:0] $end
$var reg 4 , operation_in [3:0] $end
$var reg 6 - pattern_count [5:0] $end
$var reg 1 . rst_n $end
$var reg 32 / src1_in [31:0] $end
$var reg 32 0 src2_in [31:0] $end
$var reg 1 1 start_check $end
$scope module alu $end
$var wire 4 2 ALU_control [3:0] $end
$var wire 1 ) clk $end
$var wire 1 . rst_n $end
$var wire 32 3 src1 [31:0] $end
$var wire 32 4 src2 [31:0] $end
$var wire 32 5 temp_result [31:0] $end
$var wire 32 6 slt [31:0] $end
$var wire 32 7 carry [31:0] $end
$var reg 1 ( cout $end
$var reg 1 ' overflow $end
$var reg 32 8 result [31:0] $end
$var reg 1 # zero $end
$scope module alu0 $end
$var wire 1 9 A_invert $end
$var wire 1 : B_invert $end
$var wire 1 ; cin $end
$var wire 1 < cout $end
$var wire 1 = less $end
$var wire 2 > operation [1:0] $end
$var wire 1 ? src1 $end
$var wire 1 @ src1_temp $end
$var wire 1 A src2 $end
$var wire 1 B src2_temp $end
$var reg 1 C result $end
$upscope $end
$scope module alu1 $end
$var wire 1 D A_invert $end
$var wire 1 E B_invert $end
$var wire 1 F cin $end
$var wire 1 G cout $end
$var wire 1 H less $end
$var wire 2 I operation [1:0] $end
$var wire 1 J src1 $end
$var wire 1 K src1_temp $end
$var wire 1 L src2 $end
$var wire 1 M src2_temp $end
$var reg 1 N result $end
$upscope $end
$scope module alu10 $end
$var wire 1 O A_invert $end
$var wire 1 P B_invert $end
$var wire 1 Q cin $end
$var wire 1 R cout $end
$var wire 1 S less $end
$var wire 2 T operation [1:0] $end
$var wire 1 U src1 $end
$var wire 1 V src1_temp $end
$var wire 1 W src2 $end
$var wire 1 X src2_temp $end
$var reg 1 Y result $end
$upscope $end
$scope module alu11 $end
$var wire 1 Z A_invert $end
$var wire 1 [ B_invert $end
$var wire 1 \ cin $end
$var wire 1 ] cout $end
$var wire 1 ^ less $end
$var wire 2 _ operation [1:0] $end
$var wire 1 ` src1 $end
$var wire 1 a src1_temp $end
$var wire 1 b src2 $end
$var wire 1 c src2_temp $end
$var reg 1 d result $end
$upscope $end
$scope module alu12 $end
$var wire 1 e A_invert $end
$var wire 1 f B_invert $end
$var wire 1 g cin $end
$var wire 1 h cout $end
$var wire 1 i less $end
$var wire 2 j operation [1:0] $end
$var wire 1 k src1 $end
$var wire 1 l src1_temp $end
$var wire 1 m src2 $end
$var wire 1 n src2_temp $end
$var reg 1 o result $end
$upscope $end
$scope module alu13 $end
$var wire 1 p A_invert $end
$var wire 1 q B_invert $end
$var wire 1 r cin $end
$var wire 1 s cout $end
$var wire 1 t less $end
$var wire 2 u operation [1:0] $end
$var wire 1 v src1 $end
$var wire 1 w src1_temp $end
$var wire 1 x src2 $end
$var wire 1 y src2_temp $end
$var reg 1 z result $end
$upscope $end
$scope module alu14 $end
$var wire 1 { A_invert $end
$var wire 1 | B_invert $end
$var wire 1 } cin $end
$var wire 1 ~ cout $end
$var wire 1 !" less $end
$var wire 2 "" operation [1:0] $end
$var wire 1 #" src1 $end
$var wire 1 $" src1_temp $end
$var wire 1 %" src2 $end
$var wire 1 &" src2_temp $end
$var reg 1 '" result $end
$upscope $end
$scope module alu15 $end
$var wire 1 (" A_invert $end
$var wire 1 )" B_invert $end
$var wire 1 *" cin $end
$var wire 1 +" cout $end
$var wire 1 ," less $end
$var wire 2 -" operation [1:0] $end
$var wire 1 ." src1 $end
$var wire 1 /" src1_temp $end
$var wire 1 0" src2 $end
$var wire 1 1" src2_temp $end
$var reg 1 2" result $end
$upscope $end
$scope module alu16 $end
$var wire 1 3" A_invert $end
$var wire 1 4" B_invert $end
$var wire 1 5" cin $end
$var wire 1 6" cout $end
$var wire 1 7" less $end
$var wire 2 8" operation [1:0] $end
$var wire 1 9" src1 $end
$var wire 1 :" src1_temp $end
$var wire 1 ;" src2 $end
$var wire 1 <" src2_temp $end
$var reg 1 =" result $end
$upscope $end
$scope module alu17 $end
$var wire 1 >" A_invert $end
$var wire 1 ?" B_invert $end
$var wire 1 @" cin $end
$var wire 1 A" cout $end
$var wire 1 B" less $end
$var wire 2 C" operation [1:0] $end
$var wire 1 D" src1 $end
$var wire 1 E" src1_temp $end
$var wire 1 F" src2 $end
$var wire 1 G" src2_temp $end
$var reg 1 H" result $end
$upscope $end
$scope module alu18 $end
$var wire 1 I" A_invert $end
$var wire 1 J" B_invert $end
$var wire 1 K" cin $end
$var wire 1 L" cout $end
$var wire 1 M" less $end
$var wire 2 N" operation [1:0] $end
$var wire 1 O" src1 $end
$var wire 1 P" src1_temp $end
$var wire 1 Q" src2 $end
$var wire 1 R" src2_temp $end
$var reg 1 S" result $end
$upscope $end
$scope module alu19 $end
$var wire 1 T" A_invert $end
$var wire 1 U" B_invert $end
$var wire 1 V" cin $end
$var wire 1 W" cout $end
$var wire 1 X" less $end
$var wire 2 Y" operation [1:0] $end
$var wire 1 Z" src1 $end
$var wire 1 [" src1_temp $end
$var wire 1 \" src2 $end
$var wire 1 ]" src2_temp $end
$var reg 1 ^" result $end
$upscope $end
$scope module alu2 $end
$var wire 1 _" A_invert $end
$var wire 1 `" B_invert $end
$var wire 1 a" cin $end
$var wire 1 b" cout $end
$var wire 1 c" less $end
$var wire 2 d" operation [1:0] $end
$var wire 1 e" src1 $end
$var wire 1 f" src1_temp $end
$var wire 1 g" src2 $end
$var wire 1 h" src2_temp $end
$var reg 1 i" result $end
$upscope $end
$scope module alu20 $end
$var wire 1 j" A_invert $end
$var wire 1 k" B_invert $end
$var wire 1 l" cin $end
$var wire 1 m" cout $end
$var wire 1 n" less $end
$var wire 2 o" operation [1:0] $end
$var wire 1 p" src1 $end
$var wire 1 q" src1_temp $end
$var wire 1 r" src2 $end
$var wire 1 s" src2_temp $end
$var reg 1 t" result $end
$upscope $end
$scope module alu21 $end
$var wire 1 u" A_invert $end
$var wire 1 v" B_invert $end
$var wire 1 w" cin $end
$var wire 1 x" cout $end
$var wire 1 y" less $end
$var wire 2 z" operation [1:0] $end
$var wire 1 {" src1 $end
$var wire 1 |" src1_temp $end
$var wire 1 }" src2 $end
$var wire 1 ~" src2_temp $end
$var reg 1 !# result $end
$upscope $end
$scope module alu22 $end
$var wire 1 "# A_invert $end
$var wire 1 ## B_invert $end
$var wire 1 $# cin $end
$var wire 1 %# cout $end
$var wire 1 &# less $end
$var wire 2 '# operation [1:0] $end
$var wire 1 (# src1 $end
$var wire 1 )# src1_temp $end
$var wire 1 *# src2 $end
$var wire 1 +# src2_temp $end
$var reg 1 ,# result $end
$upscope $end
$scope module alu23 $end
$var wire 1 -# A_invert $end
$var wire 1 .# B_invert $end
$var wire 1 /# cin $end
$var wire 1 0# cout $end
$var wire 1 1# less $end
$var wire 2 2# operation [1:0] $end
$var wire 1 3# src1 $end
$var wire 1 4# src1_temp $end
$var wire 1 5# src2 $end
$var wire 1 6# src2_temp $end
$var reg 1 7# result $end
$upscope $end
$scope module alu24 $end
$var wire 1 8# A_invert $end
$var wire 1 9# B_invert $end
$var wire 1 :# cin $end
$var wire 1 ;# cout $end
$var wire 1 <# less $end
$var wire 2 =# operation [1:0] $end
$var wire 1 ># src1 $end
$var wire 1 ?# src1_temp $end
$var wire 1 @# src2 $end
$var wire 1 A# src2_temp $end
$var reg 1 B# result $end
$upscope $end
$scope module alu25 $end
$var wire 1 C# A_invert $end
$var wire 1 D# B_invert $end
$var wire 1 E# cin $end
$var wire 1 F# cout $end
$var wire 1 G# less $end
$var wire 2 H# operation [1:0] $end
$var wire 1 I# src1 $end
$var wire 1 J# src1_temp $end
$var wire 1 K# src2 $end
$var wire 1 L# src2_temp $end
$var reg 1 M# result $end
$upscope $end
$scope module alu26 $end
$var wire 1 N# A_invert $end
$var wire 1 O# B_invert $end
$var wire 1 P# cin $end
$var wire 1 Q# cout $end
$var wire 1 R# less $end
$var wire 2 S# operation [1:0] $end
$var wire 1 T# src1 $end
$var wire 1 U# src1_temp $end
$var wire 1 V# src2 $end
$var wire 1 W# src2_temp $end
$var reg 1 X# result $end
$upscope $end
$scope module alu27 $end
$var wire 1 Y# A_invert $end
$var wire 1 Z# B_invert $end
$var wire 1 [# cin $end
$var wire 1 \# cout $end
$var wire 1 ]# less $end
$var wire 2 ^# operation [1:0] $end
$var wire 1 _# src1 $end
$var wire 1 `# src1_temp $end
$var wire 1 a# src2 $end
$var wire 1 b# src2_temp $end
$var reg 1 c# result $end
$upscope $end
$scope module alu28 $end
$var wire 1 d# A_invert $end
$var wire 1 e# B_invert $end
$var wire 1 f# cin $end
$var wire 1 g# cout $end
$var wire 1 h# less $end
$var wire 2 i# operation [1:0] $end
$var wire 1 j# src1 $end
$var wire 1 k# src1_temp $end
$var wire 1 l# src2 $end
$var wire 1 m# src2_temp $end
$var reg 1 n# result $end
$upscope $end
$scope module alu29 $end
$var wire 1 o# A_invert $end
$var wire 1 p# B_invert $end
$var wire 1 q# cin $end
$var wire 1 r# cout $end
$var wire 1 s# less $end
$var wire 2 t# operation [1:0] $end
$var wire 1 u# src1 $end
$var wire 1 v# src1_temp $end
$var wire 1 w# src2 $end
$var wire 1 x# src2_temp $end
$var reg 1 y# result $end
$upscope $end
$scope module alu3 $end
$var wire 1 z# A_invert $end
$var wire 1 {# B_invert $end
$var wire 1 |# cin $end
$var wire 1 }# cout $end
$var wire 1 ~# less $end
$var wire 2 !$ operation [1:0] $end
$var wire 1 "$ src1 $end
$var wire 1 #$ src1_temp $end
$var wire 1 $$ src2 $end
$var wire 1 %$ src2_temp $end
$var reg 1 &$ result $end
$upscope $end
$scope module alu30 $end
$var wire 1 '$ A_invert $end
$var wire 1 ($ B_invert $end
$var wire 1 )$ cin $end
$var wire 1 *$ cout $end
$var wire 1 +$ less $end
$var wire 2 ,$ operation [1:0] $end
$var wire 1 -$ src1 $end
$var wire 1 .$ src1_temp $end
$var wire 1 /$ src2 $end
$var wire 1 0$ src2_temp $end
$var reg 1 1$ result $end
$upscope $end
$scope module alu31 $end
$var wire 1 2$ A_invert $end
$var wire 1 3$ B_invert $end
$var wire 1 4$ cin $end
$var wire 1 5$ cout $end
$var wire 1 6$ less $end
$var wire 2 7$ operation [1:0] $end
$var wire 1 8$ src1 $end
$var wire 1 9$ src1_temp $end
$var wire 1 :$ src2 $end
$var wire 1 ;$ src2_temp $end
$var reg 1 <$ result $end
$upscope $end
$scope module alu4 $end
$var wire 1 =$ A_invert $end
$var wire 1 >$ B_invert $end
$var wire 1 ?$ cin $end
$var wire 1 @$ cout $end
$var wire 1 A$ less $end
$var wire 2 B$ operation [1:0] $end
$var wire 1 C$ src1 $end
$var wire 1 D$ src1_temp $end
$var wire 1 E$ src2 $end
$var wire 1 F$ src2_temp $end
$var reg 1 G$ result $end
$upscope $end
$scope module alu5 $end
$var wire 1 H$ A_invert $end
$var wire 1 I$ B_invert $end
$var wire 1 J$ cin $end
$var wire 1 K$ cout $end
$var wire 1 L$ less $end
$var wire 2 M$ operation [1:0] $end
$var wire 1 N$ src1 $end
$var wire 1 O$ src1_temp $end
$var wire 1 P$ src2 $end
$var wire 1 Q$ src2_temp $end
$var reg 1 R$ result $end
$upscope $end
$scope module alu6 $end
$var wire 1 S$ A_invert $end
$var wire 1 T$ B_invert $end
$var wire 1 U$ cin $end
$var wire 1 V$ cout $end
$var wire 1 W$ less $end
$var wire 2 X$ operation [1:0] $end
$var wire 1 Y$ src1 $end
$var wire 1 Z$ src1_temp $end
$var wire 1 [$ src2 $end
$var wire 1 \$ src2_temp $end
$var reg 1 ]$ result $end
$upscope $end
$scope module alu7 $end
$var wire 1 ^$ A_invert $end
$var wire 1 _$ B_invert $end
$var wire 1 `$ cin $end
$var wire 1 a$ cout $end
$var wire 1 b$ less $end
$var wire 2 c$ operation [1:0] $end
$var wire 1 d$ src1 $end
$var wire 1 e$ src1_temp $end
$var wire 1 f$ src2 $end
$var wire 1 g$ src2_temp $end
$var reg 1 h$ result $end
$upscope $end
$scope module alu8 $end
$var wire 1 i$ A_invert $end
$var wire 1 j$ B_invert $end
$var wire 1 k$ cin $end
$var wire 1 l$ cout $end
$var wire 1 m$ less $end
$var wire 2 n$ operation [1:0] $end
$var wire 1 o$ src1 $end
$var wire 1 p$ src1_temp $end
$var wire 1 q$ src2 $end
$var wire 1 r$ src2_temp $end
$var reg 1 s$ result $end
$upscope $end
$scope module alu9 $end
$var wire 1 t$ A_invert $end
$var wire 1 u$ B_invert $end
$var wire 1 v$ cin $end
$var wire 1 w$ cout $end
$var wire 1 x$ less $end
$var wire 2 y$ operation [1:0] $end
$var wire 1 z$ src1 $end
$var wire 1 {$ src1_temp $end
$var wire 1 |$ src2 $end
$var wire 1 }$ src2_temp $end
$var reg 1 ~$ result $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0~$
0}$
0|$
0{$
0z$
b0 y$
0x$
0w$
0v$
0u$
0t$
0s$
0r$
0q$
0p$
0o$
b0 n$
0m$
0l$
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
b0 c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
0[$
0Z$
0Y$
b0 X$
0W$
0V$
0U$
0T$
0S$
0R$
0Q$
0P$
0O$
0N$
b0 M$
0L$
0K$
0J$
0I$
0H$
0G$
0F$
0E$
0D$
0C$
b0 B$
0A$
0@$
0?$
0>$
0=$
0<$
0;$
0:$
09$
08$
b0 7$
06$
05$
04$
03$
02$
01$
00$
0/$
0.$
0-$
b0 ,$
0+$
0*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
b0 !$
0~#
0}#
0|#
0{#
0z#
0y#
0x#
0w#
0v#
0u#
b0 t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
b0 i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
b0 ^#
0]#
0\#
0[#
0Z#
0Y#
0X#
0W#
0V#
0U#
0T#
b0 S#
0R#
0Q#
0P#
0O#
0N#
0M#
0L#
0K#
0J#
0I#
b0 H#
0G#
0F#
0E#
0D#
0C#
0B#
0A#
0@#
0?#
0>#
b0 =#
0<#
0;#
0:#
09#
08#
07#
06#
05#
04#
03#
b0 2#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
b0 '#
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
b0 z"
0y"
0x"
0w"
0v"
0u"
0t"
0s"
0r"
0q"
0p"
b0 o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
b0 d"
0c"
0b"
0a"
0`"
0_"
0^"
0]"
0\"
0["
0Z"
b0 Y"
0X"
0W"
0V"
0U"
0T"
0S"
0R"
0Q"
0P"
0O"
b0 N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0D"
b0 C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
b0 8"
07"
06"
05"
04"
03"
02"
01"
00"
0/"
0."
b0 -"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
b0 ""
0!"
0~
0}
0|
0{
0z
0y
0x
0w
0v
b0 u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
b0 j
0i
0h
0g
0f
0e
0d
0c
0b
0a
0`
b0 _
0^
0]
0\
0[
0Z
0Y
0X
0W
0V
0U
b0 T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
b0 I
0H
0G
0F
0E
0D
0C
0B
0A
0@
0?
b0 >
0=
0<
0;
0:
09
bx 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
01
b0 0
b0 /
0.
b0 -
b0 ,
b0 +
b0 *
0)
x(
x'
bx &
bx %
bx $
x#
bx "
b0 !
$end
#5000
1)
#10000
0)
#15000
1)
#20000
0)
#25000
1)
#30000
0)
#35000
1)
#40000
0)
#45000
1)
#50000
0)
#55000
1)
#60000
0)
#65000
1)
#70000
0)
#75000
1)
#80000
0)
#85000
1)
#90000
0)
#95000
1)
#100000
0)
1.
#105000
1B
1M
1h"
1%$
1F$
1Q$
1\$
1g$
1r$
1}$
1X
1c
1n
1y
1&"
11"
1:"
1E"
1P"
1["
1q"
1|"
1)#
14#
1?#
1J#
1U#
1`#
1k#
1v#
1.$
19$
1A
1L
1g"
1$$
1E$
1P$
1[$
1f$
1q$
1|$
1W
1b
1m
1x
1%"
10"
1=
19"
1D"
1O"
1Z"
1p"
1{"
1(#
13#
1>#
1I#
1T#
1_#
1j#
1u#
1-$
18$
1#
b0 %
b0 8
b1 !
b1 -
b1111111111111111 0
b1111111111111111 4
b11111111111111100000000000000001 6
b11111111111111110000000000000000 /
b11111111111111110000000000000000 3
0'
b100 $
0(
1)
#110000
0)
#115000
1w"
1m"
1l"
1@"
1W"
16"
1V"
1Q
15"
1L"
1w$
1+"
1K"
1J$
1v$
1*"
1A"
1@$
1l$
b111111100001100010000 7
1~
1i"
1&$
1G$
1]$
1h$
1s$
1~$
1d
1'"
12"
1="
1H"
1S"
1^"
1t"
17#
1B#
1c#
1n#
1y#
0B
0M
0%$
0Q$
0g$
0}$
0X
0n
0y
01"
1G"
1R"
1]"
16#
1b#
b111001100111111100101111011100 5
0C
1#$
1D$
1e$
1p$
1{$
1$"
1/"
0P"
0["
0|"
0)#
04#
0J#
0U#
0`#
0.$
09$
b1 >
b1 I
b1 d"
b1 !$
b1 B$
b1 M$
b1 X$
b1 c$
b1 n$
b1 y$
b1 T
b1 _
b1 j
b1 u
b1 ""
b1 -"
b1 8"
b1 C"
b1 N"
b1 Y"
b1 o"
b1 z"
b1 '#
b1 2#
b1 =#
b1 H#
b1 S#
b1 ^#
b1 i#
b1 t#
b1 ,$
b1 7$
0A
0L
0$$
0P$
0f$
0|$
0W
0m
0x
00"
1F"
1Q"
1\"
15#
1a#
0=
1"$
1C$
1d$
1o$
1z$
1#"
1."
0O"
0Z"
0{"
0(#
03#
0I#
0T#
0_#
0-$
08$
b10 !
b0 &
b100 "
b10 -
b1 ,
b1 2
b1000100011100100100101010100 0
b1000100011100100100101010100 4
b101000100001010111101001000100 6
b110001000100111100001110011000 /
b110001000100111100001110011000 3
1)
11
#120000
0)
#125000
15$
14$
1*$
1)$
1r#
0y#
1q#
1g#
0n#
0!#
1f#
1w"
1\#
1m"
0c#
1[#
1l"
1Q#
1W"
1P#
1V"
1F#
1L"
0'"
0G$
1}
1E#
1K"
1?$
1s
1;#
1A"
1}#
0s$
0B#
0&$
1k$
1r
1:#
1@"
1|#
1a$
1h
10#
16"
1b"
0h$
07#
0Y
0i"
1`$
1g
1/#
1Q
15"
1a"
1V$
1]
1%#
1w$
1+"
1G
0]$
0d
0R$
1U$
1\
1$#
1J$
1v$
1*"
1F
1K$
1R
1x"
1@$
1l$
1~
b11111111111111111111111111111111 7
1<
0N
0~$
0o
0z
02"
0="
0H"
0S"
0^"
0t"
0,#
0M#
0X#
01$
0<$
1B
0h"
0F$
0\$
0r$
0c
0&"
0G"
0R"
0]"
06#
0b#
b0 5
0C
1@
1K
1f"
1O$
1Z$
1V
1a
1l
1w
1P"
1["
1|"
1)#
14#
1J#
1U#
1`#
1.$
19$
b10 >
b10 I
b10 d"
b10 !$
b10 B$
b10 M$
b10 X$
b10 c$
b10 n$
b10 y$
b10 T
b10 _
b10 j
b10 u
b10 ""
b10 -"
b10 8"
b10 C"
b10 N"
b10 Y"
b10 o"
b10 z"
b10 '#
b10 2#
b10 =#
b10 H#
b10 S#
b10 ^#
b10 i#
b10 t#
b10 ,$
b10 7$
1A
0g"
0E$
0[$
0q$
0b
0%"
0F"
0Q"
0\"
05#
0a#
1=
1?
1J
1e"
1N$
1Y$
1U
1`
1k
1v
1O"
1Z"
1{"
1(#
13#
1I#
1T#
1_#
1-$
18$
b0 $
0#
b111001100111111100101111011100 %
b111001100111111100101111011100 8
b110 !
b111001100111111100101111011100 &
b0 "
b11 -
b10 ,
b10 2
b1 0
b1 4
b11111111111111111111111111111110 6
b11111111111111111111111111111111 /
b11111111111111111111111111111111 3
1)
#130000
0)
#135000
0U$
0K$
1R$
0J$
05"
0V"
0@$
0+"
0L"
1G$
12"
1S"
0?$
0v$
0\
0*"
0K"
0}#
0l$
0R
0~
0A"
1&$
1s$
1Y
1'"
1H"
0|#
0`$
0k$
0Q
0g
0}
0@"
0b"
0V$
0a$
0w$
0]
0s
b11111111111110000001000000000011 7
06"
1N
0o
0^"
1t"
1n#
11$
1i"
0]$
0h$
0~$
0d
1z
0="
0B
1M
1%$
1F$
1r$
1X
1n
11"
1R"
1]"
1s"
1~"
1A#
1m#
10$
1;$
b1010000000101101110010100111110 5
0C
0f"
0#$
0D$
0Z$
0e$
0p$
0{$
0V
0a
0w
0/"
0:"
0P"
0|"
0?#
09$
1:
1;
1E
1`"
1{#
1>$
1I$
1T$
1_$
1j$
1u$
1P
1[
1f
1q
1|
1)"
14"
1?"
1J"
1U"
1k"
1v"
1##
1.#
19#
1D#
1O#
1Z#
1e#
1p#
1($
13$
1g"
1P$
1[$
1f$
1|$
1b
1x
1%"
1;"
1F"
1*#
15#
1K#
1V#
1a#
1w#
0=
0e"
0"$
0C$
0Y$
0d$
0o$
0z$
0U
0`
0v
0."
09"
0O"
0{"
0>#
08$
1#
b0 %
b0 8
b111 !
b0 &
b110 "
b100 -
b110 ,
b110 2
b101110110000110110101011100101 0
b101110110000110110101011100101 4
b1010000000101101110010100111110 6
b1111110110110100101000000100011 /
b1111110110110100101000000100011 3
b110 $
1(
1)
#140000
0)
#145000
1U$
1*"
1K"
1|#
1?$
1J$
1`$
1k$
1v$
1Q
1\
1g
1}
15"
1@"
1V"
1K$
1~
1A"
1b"
1}#
1@$
1V$
1a$
1l$
1w$
1R
1]
1s
1+"
16"
b11111111111111111111111111111111 7
1L"
0N
0i"
0&$
0G$
0R$
0s$
0Y
0z
0'"
02"
0H"
0S"
0t"
0n#
01$
1h"
1Q$
1\$
1g$
1}$
1c
1y
1&"
1<"
1G"
1+#
16#
1L#
1W#
1b#
1x#
b1 5
1C
1f"
1#$
1D$
1Z$
1e$
1p$
1{$
1V
1a
1w
1/"
1:"
1P"
1|"
1?#
19$
b11 >
b11 I
b11 d"
b11 !$
b11 B$
b11 M$
b11 X$
b11 c$
b11 n$
b11 y$
b11 T
b11 _
b11 j
b11 u
b11 ""
b11 -"
b11 8"
b11 C"
b11 N"
b11 Y"
b11 o"
b11 z"
b11 '#
b11 2#
b11 =#
b11 H#
b11 S#
b11 ^#
b11 i#
b11 t#
b11 ,$
b11 7$
0g"
0P$
0[$
0f$
0|$
0b
0x
0%"
0;"
0F"
0*#
05#
0K#
0V#
0a#
0w#
1=
1e"
1"$
1C$
1Y$
1d$
1o$
1z$
1U
1`
1v
1."
19"
1O"
1{"
1>#
18$
b10 $
0#
b1010000000101101110010100111110 %
b1010000000101101110010100111110 8
b1100 !
b1010000000101101110010100111110 &
b10 "
b101 -
b111 ,
b111 2
b1 0
b1 4
b11111111111111111111111111111110 6
b11111111111111111111111111111111 /
b11111111111111111111111111111111 3
1)
#150000
0)
#155000
1N
1i"
1&$
1G$
1R$
1]$
1h$
1s$
1~$
1Y
1d
1o
1z
1'"
12"
1="
1H"
1S"
1^"
1t"
1!#
1,#
17#
1B#
1M#
1X#
1c#
1n#
1y#
11$
b11111111111111111111111111111111 5
1<$
1B
19
b0 >
1D
b0 I
1_"
b0 d"
1z#
b0 !$
1=$
b0 B$
1H$
b0 M$
1S$
b0 X$
1^$
b0 c$
1i$
b0 n$
1t$
b0 y$
1O
b0 T
1Z
b0 _
1e
b0 j
1p
b0 u
1{
b0 ""
1("
b0 -"
13"
b0 8"
1>"
b0 C"
1I"
b0 N"
1T"
b0 Y"
1j"
b0 o"
1u"
b0 z"
1"#
b0 '#
1-#
b0 2#
18#
b0 =#
1C#
b0 H#
1N#
b0 S#
1Y#
b0 ^#
1d#
b0 i#
1o#
b0 t#
1'$
b0 ,$
12$
b0 7$
0=
0A
0?
0J
0e"
0"$
0C$
0N$
0Y$
0d$
0o$
0z$
0U
0`
0k
0v
0#"
0."
09"
0D"
0O"
0Z"
0p"
0{"
0(#
03#
0>#
0I#
0T#
0_#
0j#
0u#
0-$
08$
b1 %
b1 8
bx !
b1 &
b0 "
b110 -
b1100 ,
b1100 2
b0 0
b0 4
b0 6
b0 /
b0 3
b0 $
0(
1)
#160000
0)
#165000
xF
xa"
x|#
x?$
xJ$
xU$
x`$
xk$
xv$
xQ
x\
xg
xr
x}
x*"
x5"
x@"
xK"
xV"
xl"
xw"
x$#
x/#
x:#
xE#
xP#
x[#
xf#
xq#
x)$
x4$
x<
xG
xb"
x}#
x@$
xK$
xV$
xa$
xl$
xw$
xR
x]
xh
xs
x~
x+"
x6"
xA"
xL"
xW"
xm"
xx"
x%#
x0#
x;#
xF#
xQ#
x\#
xg#
xr#
x*$
bx 7
x5$
xB
xM
xh"
x%$
xF$
xQ$
x\$
xg$
xr$
x}$
xX
xc
xn
xy
x&"
x1"
x<"
xG"
xR"
x]"
xs"
x~"
x+#
x6#
xA#
xL#
xW#
xb#
xm#
xx#
x0$
x;$
x@
xK
xf"
x#$
xD$
xO$
xZ$
xe$
xp$
x{$
xV
xa
xl
xw
x$"
x/"
x:"
xE"
xP"
x["
xq"
x|"
x)#
x4#
x?#
xJ#
xU#
x`#
xk#
xv#
x.$
x9$
x9
x:
x;
bx >
xD
xE
bx I
x_"
x`"
bx d"
xz#
x{#
bx !$
x=$
x>$
bx B$
xH$
xI$
bx M$
xS$
xT$
bx X$
x^$
x_$
bx c$
xi$
xj$
bx n$
xt$
xu$
bx y$
xO
xP
bx T
xZ
x[
bx _
xe
xf
bx j
xp
xq
bx u
x{
x|
bx ""
x("
x)"
bx -"
x3"
x4"
bx 8"
x>"
x?"
bx C"
xI"
xJ"
bx N"
xT"
xU"
bx Y"
xj"
xk"
bx o"
xu"
xv"
bx z"
x"#
x##
bx '#
x-#
x.#
bx 2#
x8#
x9#
bx =#
xC#
xD#
bx H#
xN#
xO#
bx S#
xY#
xZ#
bx ^#
xd#
xe#
bx i#
xo#
xp#
bx t#
x'$
x($
bx ,$
x2$
x3$
bx 7$
xA
xL
xg"
x$$
xE$
xP$
x[$
xf$
xq$
x|$
xW
xb
xm
xx
x%"
x0"
x;"
xF"
xQ"
x\"
xr"
x}"
x*#
x5#
x@#
xK#
xV#
xa#
xl#
xw#
x/$
x:$
x=
x?
xJ
xe"
x"$
xC$
xN$
xY$
xd$
xo$
xz$
xU
x`
xk
xv
x#"
x."
x9"
xD"
xO"
xZ"
xp"
x{"
x(#
x3#
x>#
xI#
xT#
x_#
xj#
xu#
x-$
x8$
b11111111111111111111111111111111 %
b11111111111111111111111111111111 8
b11111111111111111111111111111111 &
b111 -
bx ,
bx 2
bx 0
bx 4
bx 6
bx /
bx 3
1)
#170000
0)
#175000
